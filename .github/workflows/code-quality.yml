name: Code Quality

on: [push, pull_request]

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    - name: Cache apt packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: portaudio19-dev
        version: 1.0
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Cache virtual environment
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

  tests:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-group: [core, nlu, hardware, plugins, backup]
        include:
          - test-group: core
            path: tests/core/
          - test-group: nlu
            path: tests/nlu/
          - test-group: hardware
            path: tests/hardware/
          - test-group: plugins
            path: tests/plugins/
          - test-group: backup
            path: tests/test_backup_scheduler.py
    name: ${{ matrix.test-group }} Tests
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
    - name: Run ${{ matrix.test-group }} tests
      timeout-minutes: 10
      run: |
        pytest ${{ matrix.path }} -v --junitxml=test-results/${{ matrix.test-group }}.xml
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.test-group }}
        path: test-results/