id: nginx-proxy
name: NGINX Reverse Proxy
description: NGINX web server configured as a reverse proxy, providing SSL termination and routing for your web services
keywords:
  - reverse proxy
  - web server
  - nginx
  - proxy
  - ssl
  - https
  - load balancer
  - web gateway
vm_requirements:
  memory: 1024
  cores: 1
  disk: 10
  os_template: ubuntu-22.04
deployment:
  method: docker
  docker_compose: |
    version: '3'
    services:
      nginx-proxy:
        image: nginxproxy/nginx-proxy:latest
        container_name: nginx-proxy
        ports:
          - "80:80"
          - "443:443"
        environment:
          - ENABLE_IPV6=true
        volumes:
          - nginx_certs:/etc/nginx/certs
          - nginx_vhost:/etc/nginx/vhost.d
          - nginx_html:/usr/share/nginx/html
          - /var/run/docker.sock:/tmp/docker.sock:ro
        restart: unless-stopped
    
    volumes:
      nginx_certs:
      nginx_vhost:
      nginx_html:

  post_install_steps:
    - "echo 'NGINX proxy is ready for configuration. Add services with VIRTUAL_HOST environment variable'"
access_info: |
  NGINX Reverse Proxy has been successfully deployed!
  
  To add a service behind the proxy:
  1. Make sure the service is on the same Docker network
  2. Set these environment variables on your services:
     - VIRTUAL_HOST=your.domain.com
     - VIRTUAL_PORT=container_port
     - LETSENCRYPT_HOST=your.domain.com (if using SSL)
  
  The proxy will automatically detect and route traffic to containers with these variables.
notes: |
  This NGINX setup uses the nginx-proxy image which automatically discovers and configures
  proxied containers. It integrates well with Let's Encrypt for automatic SSL certificates.
  
  For optimal security:
  - Create a dedicated Docker network for proxied services
  - Configure proper SSL certificates
  - Set up firewall rules to only allow 80/443 from trusted sources