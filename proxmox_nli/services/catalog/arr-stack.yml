id: arr-stack
name: arr Media Stack
description: Complete media automation stack including Sonarr, Radarr, Prowlarr, and Bazarr for managing TV shows, movies, and subtitles, with optional VPN support
keywords:
  - media
  - sonarr
  - radarr
  - prowlarr
  - bazarr
  - tv shows
  - movies
  - subtitles
  - media management
  - media automation
  - zfs storage
  - vpn
vm_requirements:
  memory: 4096
  cores: 2
  disk: 20
  os_template: ubuntu-22.04
deployment:
  method: docker
  docker_compose: |
    version: '3'
    services:
      # VPN container for download routing
      gluetun:
        container_name: vpn
        image: qmcgaw/gluetun
        cap_add:
          - NET_ADMIN
        devices:
          - /dev/net/tun:/dev/net/tun
        environment:
          - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-mullvad}
          - VPN_TYPE=${VPN_TYPE:-wireguard}
          - SERVER_COUNTRIES=${SERVER_COUNTRIES:-usa}
          - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
          - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
          - OPENVPN_USER=${OPENVPN_USER}
          - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
        ports:
          - 8888:8888  # HTTP proxy port
          - 8388:8388  # SOCKS proxy port
        volumes:
          - gluetun_config:/gluetun
        restart: unless-stopped

      qbittorrent:
        image: linuxserver/qbittorrent:latest
        network_mode: "service:gluetun"  # Route through VPN
        environment:
          - PUID=1000
          - PGID=1000
          - TZ=America/New_York
          - WEBUI_PORT=8080
        volumes:
          - qbittorrent_config:/config
          - /mnt/media/downloads:/downloads
        depends_on:
          - gluetun
        restart: unless-stopped

      sonarr:
        image: linuxserver/sonarr:latest
        container_name: sonarr
        environment:
          - PUID=1000
          - PGID=1000
          - TZ=America/New_York
        volumes:
          - sonarr_config:/config
          - /mnt/media/tv:/tv
          - /mnt/media/downloads:/downloads
        ports:
          - 8989:8989
        restart: unless-stopped

      radarr:
        image: linuxserver/radarr:latest
        container_name: radarr
        environment:
          - PUID=1000
          - PGID=1000
          - TZ=America/New_York
        volumes:
          - radarr_config:/config
          - /mnt/media/movies:/movies
          - /mnt/media/downloads:/downloads
        ports:
          - 7878:7878
        restart: unless-stopped

      prowlarr:
        image: linuxserver/prowlarr:latest
        container_name: prowlarr
        environment:
          - PUID=1000
          - PGID=1000
          - TZ=America/New_York
        volumes:
          - prowlarr_config:/config
        ports:
          - 9696:9696
        restart: unless-stopped

      bazarr:
        image: linuxserver/bazarr:latest
        container_name: bazarr
        environment:
          - PUID=1000
          - PGID=1000
          - TZ=America/New_York
        volumes:
          - bazarr_config:/config
          - /mnt/media/movies:/movies
          - /mnt/media/tv:/tv
        ports:
          - 6767:6767
        restart: unless-stopped

    volumes:
      gluetun_config:
      qbittorrent_config:
      sonarr_config:
      radarr_config:
      prowlarr_config:
      bazarr_config:

  post_install_steps:
    - "echo 'Setting up ZFS storage...'"
    - "zfs create -o mountpoint=/mnt/media tank/media"
    - "zfs create tank/media/tv"
    - "zfs create tank/media/movies"
    - "zfs create tank/media/downloads"
    - "zfs set compression=lz4 tank/media"
    - "zfs set recordsize=1M tank/media"
    - "zfs set atime=off tank/media"
    - "chown -R 1000:1000 /mnt/media"
    - "chmod -R 775 /mnt/media"

access_info: |
  *arr Media Stack has been successfully deployed with VPN support!
  
  Access the services at:
  - Sonarr (TV Shows): http://<VM_IP>:8989
  - Radarr (Movies): http://<VM_IP>:7878
  - Prowlarr (Indexers): http://<VM_IP>:9696
  - Bazarr (Subtitles): http://<VM_IP>:6767
  - qBittorrent: http://<VM_IP>:8080 (via VPN)
  
  VPN Configuration:
  1. Set your VPN provider credentials in the environment variables:
     - For WireGuard:
       VPN_SERVICE_PROVIDER=your_provider
       VPN_TYPE=wireguard
       WIREGUARD_PRIVATE_KEY=your_private_key
       WIREGUARD_ADDRESSES=your_allowed_ips
     - For OpenVPN:
       VPN_SERVICE_PROVIDER=your_provider
       VPN_TYPE=openvpn
       OPENVPN_USER=your_username
       OPENVPN_PASSWORD=your_password
  
  Storage Configuration:
  The following ZFS datasets have been created:
  - tank/media/tv: for TV shows
  - tank/media/movies: for movies
  - tank/media/downloads: for temporary download storage
  
  ZFS has been configured with:
  - LZ4 compression for better storage efficiency
  - 1M recordsize for optimal media file performance
  - Disabled atime to reduce write operations
  
notes: |
  This stack provides a complete media automation solution with secure downloads:
  
  Media Management:
  - Sonarr: TV show automation
  - Radarr: Movie automation
  - Prowlarr: Indexer management
  - Bazarr: Subtitle management
  - qBittorrent: Download client (through VPN)
  
  VPN Integration:
  - All downloads are routed through the VPN
  - Web interfaces remain accessible on local network
  - Automatic kill switch protection
  - Supports multiple VPN providers
  
  Storage Features:
  - ZFS compression saves space while maintaining performance
  - Recordsize optimized for large media files
  - Disabled atime improves write performance
  - Dataset structure allows for granular management
  
  Best Practices:
  - Configure VPN before starting downloads
  - Use WireGuard when possible (better performance)
  - Monitor VPN connection status
  - Regular ZFS maintenance
  - Keep downloads and media on separate datasets
  - Use strong passwords for all services
  - Consider enabling additional security features